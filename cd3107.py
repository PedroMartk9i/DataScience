# -*- coding: utf-8 -*-
"""CD3107.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uol3TCJnmcP9R33W27sFjEW3b9xkqfMg
"""

import numpy as np
import matplotlib.pyplot as plt

def ecuacion_recta(x, y):
    x_array = np.array(x)
    y_array = np.array(y)
    m, b = np.polyfit(x_array, y_array, 1)
    return m, b

# Puntos dados
x1 = [76, 92, 107, 42, 65, 150, 65, 105, 40, 55]
y2 = [200, 320, 300, 160, 190, 315, 230, 380, 155, 175]

# Calcular la ecuación de la recta para x1 e y2
m_x1, b_x1 = ecuacion_recta(x1, y2)


# Crear los valores de x para las rectas
x_values = np.linspace(min(x1), max(x1), 100)

# Calcular los valores correspondientes de y para las rectas
y_values_x1 = m_x1 * x_values + b_x1


# Graficar los puntos
plt.scatter(x1, y2, color='blue', label='Puntos (x1, y2)')


# Graficar las rectas
plt.plot(x_values, y_values_x1, color='blue', label='Recta para x1')


# Etiquetas y título del gráfico
plt.xlabel('x1 / y2')

plt.title('Gráfico de los puntos y rectas')

# Leyenda
plt.legend()

# Mostrar el gráfico
plt.grid(True)
plt.show()